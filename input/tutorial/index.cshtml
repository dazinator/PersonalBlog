---
title: "Tutorials"
date: 2017-08-06T13:18:44+01:00
published: 2017-08-06T13:18:44+01:00
tags: 
    - "tutorials"
categories:
    - "Development"
ShowInNavbar: true
---
@{

    var group = Context
        .Documents[Blog.Pages]       
        .Where(x => x.FilePath(Keys.RelativeFilePath)?.FullPath?.StartsWith("tutorial") == (bool?)true)
        .Where(x=>!string.IsNullOrEmpty(x.String("tutorial", "")))
        .OrderBy(x=>x.Get<DateTime?>(BlogKeys.Published, DateTime.Now))
        .GroupBy(x=>x.String("tutorial"), x=> x);

      // Iterate over each IGrouping in the collection.
    
    foreach (IGrouping<string, IDocument> tutorialGroup in group)
    {
        <a name="@tutorialGroup.Key"></a>
        <h2>@tutorialGroup.Key</h2>     
       
       <ol>     
       
        @foreach (IDocument doc in tutorialGroup)
        {            
             <li><a href="@Context.GetLink(doc)">@doc.WithoutSettings.String("Name")</a></li>
            
        }        

          </ol>   
    }   


    List<Tuple<string, string>> pages = Context
        .Documents[Blog.Pages]       
        .Where(x => x.FilePath(Keys.RelativeFilePath)?.FullPath?.StartsWith("tutorial") == (bool?)true)
        .Select(x => Tuple.Create(x.WithoutSettings.String(Keys.Title), Context.GetLink(x)))
        .Where(x => !string.IsNullOrEmpty(x.Item1))
        .OrderBy(x => x.Item1)
        .ToList();

}