<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Asp.Net Core on Darrell Tunnell</title>
    <link>http://darrelltunnell.net/tags/asp.net-core/</link>
    <description>Recent content in Asp.Net Core on Darrell Tunnell</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Tue, 24 Jan 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://darrelltunnell.net/tags/asp.net-core/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CSLA and ASP.NET Core</title>
      <link>http://darrelltunnell.net/blog/2017/01/24/csla-and-asp.net-core/</link>
      <pubDate>Tue, 24 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>http://darrelltunnell.net/blog/2017/01/24/csla-and-asp.net-core/</guid>
      <description>&lt;p&gt;I am a fan of CSLA and I recently came accross a need to make a shiny CSLA business layer work nicely within the context of an ASP.NET Core application.
This post is aimed at CSLA developers with a similar need.
As of the &lt;a href=&#34;https://www.nuget.org/packages/CSLA-Core/4.6.500&#34;&gt;current release&lt;/a&gt;, there are a few things that you will need to take care of in order to get CSLA working smoothly, and I will cover those in this post.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ASPNET Core TagHelper&#39;s - A Better @addTagHelper type resolver</title>
      <link>http://darrelltunnell.net/blog/2016/07/25/aspnet-core-taghelper-s-a-better-addtaghelper-type-resolver/</link>
      <pubDate>Mon, 25 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>http://darrelltunnell.net/blog/2016/07/25/aspnet-core-taghelper-s-a-better-addtaghelper-type-resolver/</guid>
      <description>&lt;h3 id=&#34;what-s-this-about&#34;&gt;What&amp;rsquo;s this about?&lt;/h3&gt;

&lt;p&gt;This is about TagHelper&amp;rsquo;s in ASP.NET Core, and how to get more flexible &lt;code&gt;@addTagHelper&lt;/code&gt; directives.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ASP.NET 5 Projects - NuGet-NPM-Gulp-Bower-Jspm-Aurelia-Part2</title>
      <link>http://darrelltunnell.net/blog/2016/01/24/aurelia-and-asp-net-5-mvc-part2/</link>
      <pubDate>Sun, 24 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>http://darrelltunnell.net/blog/2016/01/24/aurelia-and-asp-net-5-mvc-part2/</guid>
      <description>&lt;p&gt;&lt;strong&gt;This post is part two of a series. For part one see &lt;a href=&#34;http://darrelltunnell.net/blog/2015/08/16/aurelia-and-asp-net-5-mvc/&#34;&gt;here&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&#34;part-2-replacing-bower-with-jspm&#34;&gt;Part 2 - Replacing Bower with JSPM&lt;/h3&gt;

&lt;p&gt;In &lt;a href=&#34;http://darrelltunnell.net/blog/2015/08/16/aurelia-and-asp-net-5-mvc&#34;&gt;part 1 of this series&lt;/a&gt; we created a shiny new ASP.NET 5 project, and I introduced some fundamentals.&lt;/p&gt;

&lt;p&gt;For reasons discussed in &lt;a href=&#34;http://darrelltunnell.net/blog/2015/08/16/aurelia-and-asp-net-5-mvc&#34;&gt;part 1&lt;/a&gt;, let&amp;rsquo;s now go ahead with our first task, which is to ditch Bower in favour of JSPM as our javascript package manager.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ASP.NET 5 Projects - NuGet-NPM-Gulp-Bower-Jspm-Aurelia</title>
      <link>http://darrelltunnell.net/blog/2015/08/16/aurelia-and-asp-net-5-mvc/</link>
      <pubDate>Sun, 16 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>http://darrelltunnell.net/blog/2015/08/16/aurelia-and-asp-net-5-mvc/</guid>
      <description>&lt;p&gt;&lt;strong&gt;This post is part 1 of a series. Part 2 is &lt;a href=&#34;http://darrelltunnell.net/blog/2016/01/24/aurelia-and-asp-net-5-mvc-part2/&#34;&gt;here&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&#34;asp-a-sea-of-packages-net-5&#34;&gt;ASP (A Sea of Packages).NET 5&lt;/h3&gt;

&lt;p&gt;When you create a new ASP.NET 5 project, you will see all sorts of new-ness. I am going to guide you, the uninitiated ASP.NET 5 web developer, through creating your first ASP.NET 5 MVC application, but we won&amp;rsquo;t stop there. In the next post of this series, we will then enhance the project with a number of features:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Bundling and Minification.&lt;/li&gt;
&lt;li&gt;Auto browser refresh (as you make changes to files during development)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In addition, I will touch upon important tooling that you need to be aware of:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;NPM&lt;/li&gt;
&lt;li&gt;Bower and why we are going to replace it with Jspm&lt;/li&gt;
&lt;li&gt;Gulp - and why is it useful&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To be able to do all of this, we will be creating an ASP.NET MVC 5 project, and then we will be using &lt;a href=&#34;http://aurelia.io/&#34;&gt;Aurelia&lt;/a&gt; to run an Aurelia application on Home page (Index.cshtml)
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ASP.NET 5 (vNext) Projects - Your NuGet Package May Fail to Install Correctly</title>
      <link>http://darrelltunnell.net/blog/2015/01/18/asp-net-5-vnext-projects-why-your-nuget-package-may-fail-to-install/</link>
      <pubDate>Sun, 18 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>http://darrelltunnell.net/blog/2015/01/18/asp-net-5-vnext-projects-why-your-nuget-package-may-fail-to-install/</guid>
      <description>&lt;h3 id=&#34;don-t-assume-nuget-packages-that-you-have-authored-will-continue-to-work-with-asp-net-5-vnext-projects&#34;&gt;Don&amp;rsquo;t assume NuGet Packages that you have authored will continue to work with ASP.NET 5 (vNext) projects.&lt;/h3&gt;

&lt;p&gt;Over the past year or so, I have authored &lt;a href=&#34;https://www.nuget.org/packages?q=darrell.tunnell&#34;&gt;a number of NuGet packages&lt;/a&gt; - because, well&amp;hellip; I am just an all around great guy.&lt;/p&gt;

&lt;p&gt;Recently, &lt;a href=&#34;http://stackoverflow.com/questions/27762659/error-while-adding-nuget-package-to-asp-net-vnext-project#comment44383264_27762659&#34;&gt;I was contacted by someone&lt;/a&gt; who was trying to use one of my NuGet packages with an ASP.NET vNext project (Preview release). Not something I have tried before - and this is where things get a little interesting.
&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>